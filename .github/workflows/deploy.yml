name: Spring Boot App CI/CD with Gradle

on:
  push:
    branches: ["main"]

env:
  AWS_REGION: ap-northeast-2
  ECR_REGISTRY: 438731655910.dkr.ecr.ap-northeast-2.amazonaws.com
  ECR_REPOSITORY: learningmate/learningmate_be

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |

            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}


            docker pull ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}


            if [ $(docker ps -q -f name=spring-app) ]; then
              docker stop spring-app
              docker rm spring-app
            fi


            docker run -d --name spring-app -p 8080:8080 \
              -e SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }} \
              -e SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }} \
              -e SPRING_JPA_HIBERNATE_DDL_AUTO=${{ secrets.SPRING_JPA_HIBERNATE_DDL_AUTO }} \
              -e SPRING_DATA_REDIS_HOST=${{ secrets.SPRING_DATA_REDIS_HOST }} \
              -e SPRING_DATA_REDIS_PORT=${{ secrets.SPRING_DATA_REDIS_PORT }} \
              -e AUTH_SECRET=${{ secrets.AUTH_SECRET }} \
              -e AUTH_EXPIRATION_MILLS=${{ secrets.AUTH_EXPIRATION_MILLS }} \
              -e AUTH_SAME_SITE=${{ secrets.AUTH_SAME_SITE }} \
              -e AUTH_REFRESH_TOKEN_EXPIRATION_DAYS=${{ secrets.AUTH_REFRESH_TOKEN_EXPIRATION_DAYS }} \
              -e AUTH_BASE_URL=${{ secrets.AUTH_BASE_URL }} \
              -e AUTH_PASSWD_RESET_URL=${{ secrets.AUTH_PASSWD_RESET_URL }} \
              -e SPRING_MAIL_HOST=${{ secrets.SPRING_MAIL_HOST }} \
              -e SPRING_MAIL_PORT=${{ secrets.SPRING_MAIL_PORT }} \
              -e SPRING_MAIL_USERNAME=${{ secrets.SPRING_MAIL_USERNAME }} \
              -e SPRING_MAIL_PASSWORD=${{ secrets.SPRING_MAIL_PASSWORD }} \
              -e SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH=${{ secrets.SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH }} \
              -e SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE=${{ secrets.SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE }} \
              -e IMAGE_UPLOAD_DIR=${{ secrets.IMAGE_UPLOAD_DIR }} \
              -e IMAGE_ALLOWED_EXTENSIONS=${{ secrets.IMAGE_ALLOWED_EXTENSIONS }} \
              -e IMAGE_IMAGE_PREFIX=${{ secrets.IMAGE_IMAGE_PREFIX }} \
              -e IMAGE_MAX_PROFILE_IMG_SIZE=${{ secrets.IMAGE_MAX_PROFILE_IMG_SIZE }} \
              -e GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} \
              -e GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECERT }} \
              -e GOOGLE_REDIRECT_URL=${{ secrets.GOOGLE_REDIRECT_URL }} \
              ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
